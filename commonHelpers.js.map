{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["\"use strict\";\n\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\n\n\nconst form = document.querySelector('.form');\nconst list = document.querySelector('.list');\n\n/*var API_KEY = '41835868-9a86cd0490c6a90cb9e6f50a0';\nvar URL = \"https://pixabay.com/api/?key=\"+API_KEY+\"&q=\"*/\n\n\n\nlet searchParams = new URLSearchParams({\n    key: '41835868-9a86cd0490c6a90cb9e6f50a0',\n    q: 'dog',\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true\n  });\n\nlet url = `https://pixabay.com/api/?${searchParams}`\nconsole.log(url);\n\nform.addEventListener(\"click\", () => {  \n  fetch(url)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(\"Sorry, there are no images matching your search query. Please try again!\");\n      }\n      return response.json();\n    })\n    .then((images) => {\n        \n      console.log(images);  \n\n      const markup = images.reduce((html, image) => {\n\t\t\t\treturn (\n                    html +\n                    `<li class= \"gallery-item\"> \n                        <img src=${image.webformatURL} data-sourse=${image.largeImageURL} alt=${image.tags} />\n                        <p>likes : ${image.likes}</p>\n                        <p>views : ${image.views} </p>\n                        <p>comments: ${image.comments} </p>\n                        <p>downloads: ${image.downloads} </p>\n\t        </li>`\n        );\n    }, '');\n        \n        list.insertAdjacentHTML(\"beforeend\", markup);\n    })\n    .catch((error) => console.log(error));\n});\n\n/*\nconst fetchUsersBtn = document.querySelector(\".btn\");\nconst userList = document.querySelector(\".user-list\");\n\nfetchUsersBtn.addEventListener(\"click\", () => {\n  fetch(\"https://jsonplaceholder.typicode.com/photos\")\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then((users) => {\n      const markup = users.map((user) => {\n\t\t\t\treturn `<li>\n\t          <p><b>Title</b>: ${user.title}</p>\n\t          <p><b>url</b>: ${user.url}</p>\n\t          <p><b>thumbnailUrl</b>: ${user.thumbnailUrl}</p>\n            <img src=${user.url} alt=\"альтернативний текст\">\n\t        </li>`;\n        })\n        .join(\"\");\n        \n\t\t\tuserList.insertAdjacentHTML(\"beforeend\", markup);\n    })\n    .catch((error) => console.log(error));\n});\n\n*/"],"names":["form","list","searchParams","url","response","images","markup","html","image","error"],"mappings":"0uBAUA,MAAMA,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAO,SAAS,cAAc,OAAO,EAO3C,IAAIC,EAAe,IAAI,gBAAgB,CACnC,IAAK,qCACL,EAAG,MACH,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,CAAG,EAECC,EAAM,4BAA4BD,IACtC,QAAQ,IAAIC,CAAG,EAEfH,EAAK,iBAAiB,QAAS,IAAM,CACnC,MAAMG,CAAG,EACN,KAAMC,GAAa,CAClB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAM,0EAA0E,EAE5F,OAAOA,EAAS,MACtB,CAAK,EACA,KAAMC,GAAW,CAEhB,QAAQ,IAAIA,CAAM,EAElB,MAAMC,EAASD,EAAO,OAAO,CAACE,EAAMC,IAEtBD,EACA;AAAA,mCACeC,EAAM,4BAA4BA,EAAM,qBAAqBA,EAAM;AAAA,qCACjEA,EAAM;AAAA,qCACNA,EAAM;AAAA,uCACJA,EAAM;AAAA,wCACLA,EAAM;AAAA,gBAGvC,EAAE,EAEDP,EAAK,mBAAmB,YAAaK,CAAM,CACnD,CAAK,EACA,MAAOG,GAAU,QAAQ,IAAIA,CAAK,CAAC,CACxC,CAAC"}